---
openapi: "3.0.1"
info:
  title: "OpenAPI definition"
  version: "0.0.1-SNAPSHOT"
tags:
- name: "Reservations Operations"
  description: "Operations related to reservations."
- name: "Availabilities Operations"
  description: "Operations related to availabilities fetching."
paths:
  /reservation/{bookingUuid}:
    get:
      tags:
      - "Reservations Operations"
      summary: "Provides an end point for fetching existing campsite reservation."
      description: "Returns existing campsite reservation by booking identifier."
      operationId: "getReservationsByBookingIdentifier"
      parameters:
      - name: "bookingUuid"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "object"
        "400":
          description: "Invalid parameters."
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "Returns existing campsite reservation by booking identifier."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReservationModel"
        "404":
          description: "Reservation not found."
          content:
            application/json:
              schema:
                type: "string"
    put:
      tags:
      - "Reservations Operations"
      summary: "Provides an end point for modifying the campsite."
      description: "Returns a unique booking identifier back to the caller if the\
        \ reservation modified ok."
      operationId: "modifyReservation"
      parameters:
      - name: "bookingUuid"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReservationRequestDto"
        required: true
      responses:
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "object"
        "400":
          description: "Invalid parameters."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReservationResponseDto"
        "404":
          description: "Unable to modify the reservation."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReservationResponseDto"
        "200":
          description: "Returns a unique booking identifier back to the caller if\
            \ the reservation modified ok."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReservationResponseDto"
    delete:
      tags:
      - "Reservations Operations"
      summary: "Provides an end point for canceling existing campsite reservation."
      description: "Cancels existing campsite reservation by booking identifier."
      operationId: "cancelReservationsByBookingIdentifier"
      parameters:
      - name: "bookingUuid"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "object"
        "400":
          description: "Invalid parameters."
          content:
            application/json:
              schema:
                type: "string"
        "204":
          description: "No content."
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "Cancels existing campsite reservation by booking identifier."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReservationModel"
  /reservation:
    get:
      tags:
      - "Reservations Operations"
      summary: "Provides an end point for fetching all existing campsite reservations."
      description: "Returns a list of all existing campsite reservations."
      operationId: "fetchAllExistingReservations"
      responses:
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: "Returns a list of all existing campsite reservations."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReservationModel"
        "400":
          description: "Invalid parameters."
          content:
            application/json:
              schema:
                type: "string"
        "404":
          description: "Empty list of reservations."
          content:
            application/json:
              schema:
                type: "string"
    post:
      tags:
      - "Reservations Operations"
      summary: "Provides an end point for reserving the campsite."
      description: "Returns a unique booking identifier back to the caller if the\
        \ reservation is successful."
      operationId: "makeReservation"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReservationRequestDto"
        required: true
      responses:
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "object"
        "400":
          description: "Invalid parameters."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReservationResponseDto"
        "200":
          description: "Returns a unique booking identifier back to the caller if\
            \ the reservation is successful."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReservationResponseDto"
        "404":
          description: "Unable to make the reservation."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReservationResponseDto"
  /availability:
    get:
      tags:
      - "Availabilities Operations"
      summary: "Returns the all availabilities or availabilities for the specified\
        \ `fromDate`,`toDate`."
      description: "Returns the all availabilities or availabilities for the specified\
        \ date range `fromDate`,`toDate`."
      operationId: "findReports"
      parameters:
      - name: "fromDate"
        in: "query"
        description: "Start of the date range."
        required: false
        schema:
          type: "string"
          format: "date"
      - name: "toDate"
        in: "query"
        description: "End of the date range."
        required: false
        schema:
          type: "string"
          format: "date"
      responses:
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "object"
        "400":
          description: "Invalid parameters."
          content:
            application/json:
              schema:
                type: "string"
        "200":
          description: "Returns all the availabilities for the specified date range\
            \ `fromDate`,`toDate`."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "string"
                  format: "uri"
        "404":
          description: "No availabilities for the specified date range `fromDate`,`toDate`."
          content:
            application/json:
              schema:
                type: "string"
  /appgitinfo:
    get:
      tags:
      - "System Git Information Operations."
      summary: "Returns the system and git information"
      description: "Returns the system and git information for UpgradeIsland application."
      operationId: "appGitInfo"
      responses:
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SystemInformation"
  /:
    get:
      tags:
      - "island-application-controller"
      operationId: "index"
      responses:
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
components:
  schemas:
    RequestDatesDto:
      required:
      - "arrivalDate"
      - "departureDate"
      type: "object"
      properties:
        arrivalDate:
          type: "string"
          format: "date"
        departureDate:
          type: "string"
          format: "date"
    ReservationRequestDto:
      required:
      - "email"
      - "firstName"
      - "lastName"
      - "requestDates"
      type: "object"
      properties:
        firstName:
          type: "string"
        lastName:
          type: "string"
        email:
          type: "string"
        requestDates:
          $ref: "#/components/schemas/RequestDatesDto"
    ReservationResponseDto:
      type: "object"
      properties:
        bookingUuid:
          type: "string"
    IslandUserModel:
      type: "object"
      properties:
        firstName:
          type: "string"
        lastName:
          type: "string"
        email:
          type: "string"
    ReservationModel:
      type: "object"
      properties:
        bookingUuid:
          type: "string"
        status:
          $ref: "#/components/schemas/StatusModel"
        user:
          $ref: "#/components/schemas/IslandUserModel"
        spot:
          $ref: "#/components/schemas/SpotModel"
        price:
          type: "integer"
          format: "int64"
        arrivalDate:
          type: "string"
          format: "date"
        departureDate:
          type: "string"
          format: "date"
    SpotModel:
      type: "object"
      properties:
        name:
          type: "string"
        description:
          type: "string"
        status:
          $ref: "#/components/schemas/StatusModel"
    StatusModel:
      type: "object"
      properties:
        code:
          type: "string"
        description:
          type: "string"
    SystemInformation:
      type: "object"
      properties:
        version:
          type: "string"
          description: "The version of UpgradeIsland application."
        build-timestamp:
          type: "string"
          description: "The build timestamp of the current version."
        git-hash:
          type: "string"
          description: "The git hash of the current version."
      description: "System information."
